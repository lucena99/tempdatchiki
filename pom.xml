<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.3.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>ru.psv4</groupId>
  <artifactId>tempdatchiki</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>tempdatchiki</name>
  <description>tempdatchiki</description>
  <packaging>war</packaging>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <!-- Dependencies -->
    <vaadin.version>13.0.5</vaadin.version>

    <!-- Overrides the old version specified by the Spring Boot parent -->
    <selenium.version>3.11.0</selenium.version>

    <!-- Plugins -->
    <frontend.maven.plugin.version>1.6</frontend.maven.plugin.version>
    <maven.war.plugin.version>3.1.0</maven.war.plugin.version>
    <maven.resources.plugin.version>3.0.2</maven.resources.plugin.version>
    <maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>
    <maven.surefire.plugin.version>2.21.0</maven.surefire.plugin.version>

    <gatling.version>3.0.2</gatling.version>
    <gatling-plugin.version>3.0.1</gatling-plugin.version>
    <scala-maven-plugin.version>3.4.4</scala-maven-plugin.version>

    <!-- Frontend -->
    <node.version>v8.1.2</node.version>
    <yarn.version>v0.27.5</yarn.version>
    <buildtools.directory>build-tools</buildtools.directory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>2.9.4</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.11.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.11.1</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>1.18</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/commons-net/commons-net -->
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.6</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.16</version>
    </dependency>

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.16</version>
    </dependency>

    <!--jsp needed-->
    <!-- Tomcat embedded container-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>

    <!-- JSTL for JSP -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>

    <!-- Need this to compile JSP -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
    </dependency>

    <!-- Need this to compile JSP,
        tomcat-embed-jasper version is not working, no idea why -->
    <dependency>
      <groupId>org.eclipse.jdt.core.compiler</groupId>
      <artifactId>ecj</artifactId>
      <version>4.6.1</version>
    </dependency>

    <!-- Optional, test for static content, bootstrap CSS-->
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery</artifactId>
      <version>1.9.1</version>
    </dependency>

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap</artifactId>
      <version>3.3.7</version>
    </dependency>

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>bootstrap-datepicker</artifactId>
      <version>1.0.1</version>
    </dependency>
    <!---->

    <!-- https://mvnrepository.com/artifact/org.firebirdsql.jdbc/jaybird-jdk18 -->
    <!--<dependency>
      <groupId>org.firebirdsql.jdbc</groupId>
      <artifactId>jaybird-jdk18</artifactId>
      <version>3.0.5</version>
    </dependency>-->

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.1</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>

    <!-- Vaadin -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.vaadin.artur</groupId>
      <artifactId>spring-data-provider</artifactId>
      <version>2.0.1</version>
    </dependency>
    <!-- End of Vaadin -->

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <!-- Add JAXB explicitly as the java.xml.bind module is not included
             by default anymore in Java 9-->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>

    <!-- Used in offline-banner.html -->
    <dependency>
      <groupId>org.webjars.bowergithub.polymerelements</groupId>
      <artifactId>iron-ajax</artifactId>
      <version>2.1.3</version>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.name}</finalName>
    <!-- The `pluginManagement` section allows listing plugin versions and their global
         configuration in one place. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-maven-plugin</artifactId>
          <version>${vaadin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend.maven.plugin.version}</version>
          <configuration>
            <nodeVersion>${node.version}</nodeVersion>
            <yarnVersion>${yarn.version}</yarnVersion>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>production</id>
      <activation>
        <property>
          <name>vaadin.productionMode</name>
        </property>
      </activation>

      <!-- (1): Make the package run in production mode when deployed as .war,
                without the need of setting extra properties on the server -->
      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>flow-server-production-mode</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <!-- (2): Run vaadin-maven-plugin to transpile and optimize static.frontend code -->
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>copy-production-files</goal>
                  <goal>package-for-production</goal>
                </goals>
                <configuration>
                  <!-- Split app into fragments in order to make login-view smaller.
                       This way is still very manual, because flow does not merge
                       elements that are only used in one fragment into that fragment.
                   -->
                  <bundle>true</bundle>
                  <fragments>
                    <fragment>
                      <name>login-fragment</name>
                      <files>
                        <file>bower_components/vaadin-login/src/vaadin-login-overlay.html</file>
                      </files>
                    </fragment>
                    <fragment>
                      <name>main-fragment</name>
                      <files>
                        <file>src/views/storefront/storefront-view.html</file>
                        <file>src/views/storefront/order-status-badge.html</file>
                        <file>src/views/orderedit/order-item-editor.html</file>
                        <file>src/views/orderedit/order-editor.html</file>
                        <file>src/views/orderedit/order-details.html</file>
                        <file>src/views/errors/access-denied-view.html</file>
                        <file>src/components/amount-field.html</file>
                        <file>src/components/form-buttons-bar.html</file>
                        <file>src/components/search-bar.html</file>
                        <file>src/components/utils-mixin.html</file>
                      </files>
                    </fragment>
                    <fragment>
                      <name>grid-fragment</name>
                      <files>
                        <file>gridConnector.js</file>
                        <file>vaadin-grid-flow-selection-column.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-column.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-column-group.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-tree-toggle.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-sorter.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-selection-column.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-filter.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-column.html</file>
                        <file>bower_components/vaadin-grid/vaadin-grid-column-group.html</file>
                        <file>ironListConnector.js</file>
                        <file>bower_components/iron-list/iron-list.html</file>
                        <file>bower_components/vaadin-grid/src/iron-list.html</file>
                      </files>
                    </fragment>
                    <fragment>
                      <name>dashboard-fragment</name>
                      <files>
                        <file>src/views/dashboard/dashboard-view.html</file>
                        <file>bower_components/vaadin-board/vaadin-board.html</file>
                        <file>bower_components/vaadin-board/vaadin-board-row.html</file>
                        <file>bower_components/vaadin-charts/vaadin-chart.html</file>
                      </files>
                    </fragment>
                  </fragments>
                  <transpileOutputDirectory>${project.build.directory}/classes/static</transpileOutputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- (3): Exclude the unprocessed static.frontend sources from the .war file -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <warSourceExcludes>frontend/**</warSourceExcludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <jvmArguments>-Dvaadin.productionMode</jvmArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
